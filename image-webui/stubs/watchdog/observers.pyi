from typing import Any, Callable, List, Optional, Union
from pathlib import Path

class FileSystemEventHandler:
    def __init__(self): ...
    def on_moved(self, event: Any) -> None: ...
    def on_created(self, event: Any) -> None: ...
    def on_deleted(self, event: Any) -> None: ...
    def on_modified(self, event: Any) -> None: ...
    def dispatch(self, event: Any) -> None: ...

class Observer:
    def __init__(self): ...
    def schedule(self, event_handler: FileSystemEventHandler, path: Union[str, Path], recursive: bool = False) -> Any: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def join(self, timeout: Optional[float] = None) -> None: ...
    def is_alive(self) -> bool: ...
